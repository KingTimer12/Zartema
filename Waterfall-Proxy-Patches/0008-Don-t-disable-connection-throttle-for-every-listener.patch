From d5a30fa656c008c450279fe10ac8fcdd971659fd Mon Sep 17 00:00:00 2001
From: Mariaum <me@mariaum.com>
Date: Thu, 5 Nov 2020 21:33:37 -0300
Subject: [PATCH] Don't disable connection throttle for every listener when
 using proxy protocol.


diff --git a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
index 4d1c5e31f..04cb36e0c 100644
--- a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
+++ b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
@@ -333,12 +333,12 @@ public class BungeeCord extends ProxyServer
             if ( info.isProxyProtocol() )
             {
                 getLogger().log( Level.WARNING, "Using PROXY protocol for listener {0}, please ensure this listener is adequately firewalled.", info.getSocketAddress() );
-
+                /* Zartema - Don't disable connection throttle for every listener when using proxy protocol.
                 if ( connectionThrottle != null )
                 {
                     connectionThrottle = null;
                     getLogger().log( Level.WARNING, "Since PROXY protocol is in use, internal connection throttle has been disabled." );
-                }
+                }*/
             }
 
             ChannelFutureListener listener = new ChannelFutureListener()
diff --git a/proxy/src/main/java/net/md_5/bungee/netty/PipelineUtils.java b/proxy/src/main/java/net/md_5/bungee/netty/PipelineUtils.java
index 96704d5eb..926e65194 100644
--- a/proxy/src/main/java/net/md_5/bungee/netty/PipelineUtils.java
+++ b/proxy/src/main/java/net/md_5/bungee/netty/PipelineUtils.java
@@ -59,13 +59,15 @@ public class PipelineUtils
         protected void initChannel(Channel ch) throws Exception
         {
             SocketAddress remoteAddress = ( ch.remoteAddress() == null ) ? ch.parent().localAddress() : ch.remoteAddress();
+            // Zartema start - Don't disable connection throttle for every listener when using proxy protocol.
+            ListenerInfo listener = ch.attr( LISTENER ).get();
 
-            if ( BungeeCord.getInstance().getConnectionThrottle() != null && BungeeCord.getInstance().getConnectionThrottle().throttle( remoteAddress ) )
+            if ( !listener.isProxyProtocol() && BungeeCord.getInstance().getConnectionThrottle() != null && BungeeCord.getInstance().getConnectionThrottle().throttle( remoteAddress ) )
             {
                 ch.close();
                 return;
             }
-            ListenerInfo listener = ch.attr( LISTENER ).get();
+            // Zartema end
 
             if ( BungeeCord.getInstance().getPluginManager().callEvent( new ClientConnectEvent( remoteAddress, listener ) ).isCancelled() )
             {
-- 
2.31.1

